// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StuHubSystem.Core.Database;

namespace StuHubSystem.Core.Migrations
{
    [DbContext(typeof(StuHubContext))]
    [Migration("20201013073012_SH_InitialMigration")]
    partial class SH_InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("StuHubSystem.Core.Entities.EducationSystem.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BoyPercentage")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<int>("GirlPercentage")
                        .HasColumnType("int");

                    b.Property<string>("SchoolAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolBackgroundImages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("StuHubSystem.Core.Entities.EducationSystem.StudyField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("StudyFieldName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StudyGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudyGroupId");

                    b.ToTable("StudyFields");
                });

            modelBuilder.Entity("StuHubSystem.Core.Entities.EducationSystem.StudyGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("StudyGroupColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyGroupImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudyGroups");
                });

            modelBuilder.Entity("StuHubSystem.Core.Entities.Subjects.College.CollegeSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int?>("StudyFieldId")
                        .HasColumnType("int");

                    b.Property<int?>("StudyGroupId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.HasIndex("StudyFieldId");

                    b.HasIndex("StudyGroupId");

                    b.ToTable("CollegeSubjects");
                });

            modelBuilder.Entity("StuHubSystem.Core.Entities.Subjects.College.CollegeSubjectRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CollegeSubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateUpload")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HomeWork")
                        .HasColumnType("bit");

                    b.Property<bool>("Laboratory")
                        .HasColumnType("bit");

                    b.Property<int?>("LearningCityId")
                        .HasColumnType("int");

                    b.Property<int?>("LearningDistrictId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTimeType")
                        .HasColumnType("int");

                    b.Property<bool>("Presentation")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Teacher")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollegeSubjectId");

                    b.HasIndex("LearningCityId");

                    b.HasIndex("LearningDistrictId");

                    b.ToTable("CollegeSubjectRequests");
                });

            modelBuilder.Entity("StuHubSystem.Core.Entities.VietNamLocation.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("StuHubSystem.Core.Entities.VietNamLocation.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("DistrictName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("StuHubSystem.Core.Entities.EducationSystem.School", b =>
                {
                    b.HasOne("StuHubSystem.Core.Entities.VietNamLocation.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("StuHubSystem.Core.Entities.VietNamLocation.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.Navigation("City");

                    b.Navigation("District");
                });

            modelBuilder.Entity("StuHubSystem.Core.Entities.EducationSystem.StudyField", b =>
                {
                    b.HasOne("StuHubSystem.Core.Entities.EducationSystem.StudyGroup", "StudyGroup")
                        .WithMany()
                        .HasForeignKey("StudyGroupId");

                    b.Navigation("StudyGroup");
                });

            modelBuilder.Entity("StuHubSystem.Core.Entities.Subjects.College.CollegeSubject", b =>
                {
                    b.HasOne("StuHubSystem.Core.Entities.EducationSystem.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId");

                    b.HasOne("StuHubSystem.Core.Entities.EducationSystem.StudyField", "StudyField")
                        .WithMany()
                        .HasForeignKey("StudyFieldId");

                    b.HasOne("StuHubSystem.Core.Entities.EducationSystem.StudyGroup", "StudyGroup")
                        .WithMany()
                        .HasForeignKey("StudyGroupId");

                    b.Navigation("School");

                    b.Navigation("StudyField");

                    b.Navigation("StudyGroup");
                });

            modelBuilder.Entity("StuHubSystem.Core.Entities.Subjects.College.CollegeSubjectRequest", b =>
                {
                    b.HasOne("StuHubSystem.Core.Entities.Subjects.College.CollegeSubject", "CollegeSubject")
                        .WithMany()
                        .HasForeignKey("CollegeSubjectId");

                    b.HasOne("StuHubSystem.Core.Entities.VietNamLocation.City", "LearningCity")
                        .WithMany()
                        .HasForeignKey("LearningCityId");

                    b.HasOne("StuHubSystem.Core.Entities.VietNamLocation.District", "LearningDistrict")
                        .WithMany()
                        .HasForeignKey("LearningDistrictId");

                    b.Navigation("CollegeSubject");

                    b.Navigation("LearningCity");

                    b.Navigation("LearningDistrict");
                });

            modelBuilder.Entity("StuHubSystem.Core.Entities.VietNamLocation.District", b =>
                {
                    b.HasOne("StuHubSystem.Core.Entities.VietNamLocation.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });
#pragma warning restore 612, 618
        }
    }
}
